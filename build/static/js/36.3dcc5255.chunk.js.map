{"version":3,"sources":["../../../../Documents/GitHub/JJSploit/client/node_modules/monaco-editor/esm/vs/basic-languages/liquid/liquid.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","_fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_0__","EMPTY_ELEMENTS","wordPattern","brackets","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","RegExp","join","afterText","action","indentAction","IndentAction","IndentOutdent","Indent","defaultToken","tokenPostfix","builtinTags","builtinFilters","constants","operators","symbol","identifier","tokenizer","root","token","switchTo","next","comment","otherTag","liquidState","include","liquidRaw","liquidRoot","cases","@operators","@default","@constants","@builtinFilters","@builtinTags"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAAA,IAAAC,EAAAN,EAAA,KAKAO,EAAA,uHACOH,EAAA,CACPI,YAAA,iFACAC,SAAA,sCAA8C,MAAM,MAAO,MAAO,KAAO,KAAK,WAC9EC,iBAAA,EACAC,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,MAEAC,iBAAA,EACAF,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,MAEAE,aAAA,EACAC,WAAA,IAAAC,OAAA,UAAAT,EAAAU,KAAA,iDACAC,UAAA,wBACAC,OAAA,CACAC,aAAoBd,EAAA,EAASe,aAAAC,gBAE1B,CACHP,WAAA,IAAAC,OAAA,UAAAT,EAAAU,KAAA,iDACAE,OAAA,CACAC,aAAoBd,EAAA,EAASe,aAAAE,WAItBlB,EAAA,CACPmB,aAAA,GACAC,aAAA,GACAC,YAAA,wPACAC,eAAA,+dACAC,UAAA,iBACAC,UAAA,8BACAC,OAAA,UACAC,WAAA,iBACAC,UAAA,CACAC,KAAA,0BAAkC,2CAA8C,CAChFC,MAAA,WACAC,SAAA,sBACK,QAAO,CACZD,MAAA,WACAC,SAAA,sBACK,mGACLD,MAAA,WACAE,KAAA,eACK,iCACLF,MAAA,WACAE,KAAA,eACK,6BAAiC,8BAEtCC,QAAA,6BAAwC,6DACxCC,SAAA,SAAqB,CACrBJ,MAAA,WACAC,SAAA,0BACK,QAAO,CACZD,MAAA,WACAC,SAAA,0BACK,gKAELI,YAAA,SAAwB,mCAAqC,CAC7DL,MAAA,0BACAC,SAAA,aACK,QAAO,sCAA0C,6CAAgD,CACtGD,MAAA,uBACAC,SAAA,aACK,CACLK,QAAA,eAEAC,UAAA,iCAA0C,QAAW,gDAAqD,CAC1GP,MAAA,uBACAE,KAAA,WAEAM,WAAA,6GACAC,MAAA,CACAC,aAAA,kBACAC,WAAA,MAEK,uBACLF,MAAA,CACAG,aAAA,iBACAC,kBAAA,oBACAC,eAAA,oBACAH,WAAA,qBAEK,UAAQ","file":"static/js/36.3dcc5255.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { languages } from '../fillers/monaco-editor-core.js';\nvar EMPTY_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\nexport var conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n  brackets: [['<!--', '-->'], ['<', '>'], ['{{', '}}'], ['{%', '%}'], ['{', '}'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '%',\n    close: '%'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  surroundingPairs: [{\n    open: '<',\n    close: '>'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  onEnterRules: [{\n    beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n    afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\n    action: {\n      indentAction: languages.IndentAction.IndentOutdent\n    }\n  }, {\n    beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n    action: {\n      indentAction: languages.IndentAction.Indent\n    }\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '',\n  builtinTags: ['if', 'else', 'elseif', 'endif', 'render', 'assign', 'capture', 'endcapture', 'case', 'endcase', 'comment', 'endcomment', 'cycle', 'decrement', 'for', 'endfor', 'include', 'increment', 'layout', 'raw', 'endraw', 'render', 'tablerow', 'endtablerow', 'unless', 'endunless'],\n  builtinFilters: ['abs', 'append', 'at_least', 'at_most', 'capitalize', 'ceil', 'compact', 'date', 'default', 'divided_by', 'downcase', 'escape', 'escape_once', 'first', 'floor', 'join', 'json', 'last', 'lstrip', 'map', 'minus', 'modulo', 'newline_to_br', 'plus', 'prepend', 'remove', 'remove_first', 'replace', 'replace_first', 'reverse', 'round', 'rstrip', 'size', 'slice', 'sort', 'sort_natural', 'split', 'strip', 'strip_html', 'strip_newlines', 'times', 'truncate', 'truncatewords', 'uniq', 'upcase', 'url_decode', 'url_encode', 'where'],\n  constants: ['true', 'false'],\n  operators: ['==', '!=', '>', '<', '>=', '<='],\n  symbol: /[=><!]+/,\n  identifier: /[a-zA-Z_][\\w]*/,\n  tokenizer: {\n    root: [[/\\{\\%\\s*comment\\s*\\%\\}/, 'comment.start.liquid', '@comment'], [/\\{\\{/, {\n      token: '@rematch',\n      switchTo: '@liquidState.root'\n    }], [/\\{\\%/, {\n      token: '@rematch',\n      switchTo: '@liquidState.root'\n    }], [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']], [/(<)([:\\w]+)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@otherTag'\n    }]], [/(<\\/)(\\w+)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@otherTag'\n    }]], [/</, 'delimiter.html'], [/\\{/, 'delimiter.html'], [/[^<{]+/] // text\n    ],\n    comment: [[/\\{\\%\\s*endcomment\\s*\\%\\}/, 'comment.end.liquid', '@pop'], [/./, 'comment.content.liquid']],\n    otherTag: [[/\\{\\{/, {\n      token: '@rematch',\n      switchTo: '@liquidState.otherTag'\n    }], [/\\{\\%/, {\n      token: '@rematch',\n      switchTo: '@liquidState.otherTag'\n    }], [/\\/?>/, 'delimiter.html', '@pop'], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/[ \\t\\r\\n]+/] // whitespace\n    ],\n    liquidState: [[/\\{\\{/, 'delimiter.output.liquid'], [/\\}\\}/, {\n      token: 'delimiter.output.liquid',\n      switchTo: '@$S2.$S3'\n    }], [/\\{\\%/, 'delimiter.tag.liquid'], [/raw\\s*\\%\\}/, 'delimiter.tag.liquid', '@liquidRaw'], [/\\%\\}/, {\n      token: 'delimiter.tag.liquid',\n      switchTo: '@$S2.$S3'\n    }], {\n      include: 'liquidRoot'\n    }],\n    liquidRaw: [[/^(?!\\{\\%\\s*endraw\\s*\\%\\}).+/], [/\\{\\%/, 'delimiter.tag.liquid'], [/@identifier/], [/\\%\\}/, {\n      token: 'delimiter.tag.liquid',\n      next: '@root'\n    }]],\n    liquidRoot: [[/\\d+(\\.\\d+)?/, 'number.liquid'], [/\"[^\"]*\"/, 'string.liquid'], [/'[^']*'/, 'string.liquid'], [/\\s+/], [/@symbol/, {\n      cases: {\n        '@operators': 'operator.liquid',\n        '@default': ''\n      }\n    }], [/\\./], [/@identifier/, {\n      cases: {\n        '@constants': 'keyword.liquid',\n        '@builtinFilters': 'predefined.liquid',\n        '@builtinTags': 'predefined.liquid',\n        '@default': 'variable.liquid'\n      }\n    }], [/[^}|%]/, 'variable.liquid']]\n  }\n};"],"sourceRoot":""}